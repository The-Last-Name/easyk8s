# 高可用需要先配置VIP地址
- name: if Vip 
  shell: 
    ip addr | grep {{vip}}
  register: if_vip
  ignore_errors: True
  when:
   - ssl_host == "yes"
   - HA == "yes"

- name: if_net_name (1/2)
  template:
    src: net_name.sh.j2
    dest: /tmp/net_name.sh
   
- name: if_net_name (2/2)
  shell:
    bash /tmp/net_name.sh
  register: if_net_name
   
- name: set vip
  shell:
    ip addr add {{vip}}/24 dev "{{if_net_name.stdout}}"
  when:
    - ssl_host == "yes"
    - HA == "yes"
    - if_vip.rc != 0

- name: kubeadm config create
  template:
    src: kubeadm-config.yaml.j2
    dest: /tmp/kubeadm-config.yaml
  when:
    - ssl_host == "yes"

# 判断是否存在旧环境
- name: if kubeamd
  shell:
    ls /etc/kubernetes/pki
  ignore_errors: True
  register: result

- name: kubeadm reset (1/2)
  copy:
    src: ../files/kubeadm_reset.sh
    mode: 0755
    dest: /tmp/kubeadm_reset.sh
    
- name: kubeadm reset (2/2)
  shell:
    bash /tmp/kubeadm_reset.sh
  when:
    - result.stdout != ""

# 离线需要提前准备镜
- name: down loading images (1/3)
  shell:
    cat /etc/yum.repos.d/Offline.repo  | grep baseurl | awk -F "=" '{print $2}'
  register: images_url
  when:
    - Offline == "yes"

# - name: bugmsg
  # debug:
    # msg: "{{images_url.stdout}}images/k8s/{{k8sversion}}/{{k8sversion}}.tar"
    
- name: down loading images (2/3)
  get_url:
    url: "{{images_url.stdout}}images/k8s/{{k8sversion}}/{{k8sversion}}.tar"
    dest: "/tmp/{{k8sversion}}.tar"
    timeout: 120
  when:
    - Offline == "yes"
  
- name: down loading images (3/3)
  shell:
    docker load -i /tmp/"{{k8sversion}}".tar
  when:
    - Offline == "yes"
    
- name: kubeadm init
  shell:
    kubeadm init --config /tmp/kubeadm-config.yaml > /tmp/kubeadm-init.log 2>&1
  when:
    - ssl_host == "yes"

- name: Scp pki (1/2)
  template:
    src: copy_pki.sh.j2
    dest: /tmp/copy_pki.sh
  when:
    - ssl_host == "yes" 
    
- name: Scp pki (2/2)
  shell:
    bash /tmp/copy_pki.sh
  when:
    - ssl_host == "yes" 
    
- name: kubeadm join (1/2)
  shell:
    cat /tmp/kubeadm-init.log  | grep -A 3 "kubeadm join" | head -n 3 > /tmp/kubeadm_join_master.sh
  when:
    - ssl_host == "yes" 
    
- name: kubeadm join (2/2)
  shell:
    cat /tmp/kubeadm-init.log  | grep -A 3 "kubeadm join" | tail -n 2 > /tmp/kubeadm_join_node.sh
  when:
    - ssl_host == "yes" 
    
- name: scp kubeadm join(1/2)
  template:
    src: copy_kubeadm_join.sh.j2
    dest: /tmp/copy_kubeadm_join.sh
  when:
    - ssl_host == "yes" 
    
- name: scp kubeadm join(2/2)
  shell:
    bash /tmp/copy_kubeadm_join.sh
  when:
    - ssl_host == "yes" 
    
- name: k8s master join
  shell:
    bash /tmp/kubeadm_join_master.sh 
  when:
    - ssl_host != "yes"
    
- name: set k8s kubeamd config(1/4)
  shell:
    mkdir -p $HOME/.kube 

- name: set k8s kubeamd config(2/4)
  shell:
    /usr/bin/cp /etc/kubernetes/admin.conf $HOME/.kube/config
   

- name: set k8s kubeamd config(3/4)
  shell:
    chown $(id -u):$(id -g) $HOME/.kube/config
  
- name: set k8s kubeamd config(4/4)
  lineinfile:
    dest: /etc/profile
    line: "source <(kubectl completion bash)"
    
# 网络插件的安装（在线，离线）
# 在线
- name: k8s install cni flannel (1/2)
  shell: 
    kubectl apply -f http://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  when:
    - ssl_host == "yes"
    - cni == "flannel"
    - Offline != "yes"

# 可使用更新来更换国内镜像源
# kubectl set image daemonsets.apps kube-flannel-ds-amd64 -n kube-system kube-flannel=registry.cn-hangzhou.aliyuncs.com/isys/flannel:v0.12.0-amd64 install-cni=registry.cn-hangzhou.aliyuncs.com/isys/flannel:v0.12.0-amd64
- name: k8s install cni flannel (2/2)
  shell: 
    kubectl set image daemonsets.apps kube-flannel-ds-amd64 -n kube-system kube-flannel=registry.cn-hangzhou.aliyuncs.com/isys/flannel:v0.12.0-amd64 install-cni=registry.cn-hangzhou.aliyuncs.com/isys/flannel:v0.12.0-amd64
  when:
    - ssl_host == "yes"
    - cni == "flannel"
    - Offline != "yes"
  
- name: k8s install cni calico 
  shell: 
    kubectl apply -f http://docs.projectcalico.org/manifests/calico.yaml
  when:
    - ssl_host == "yes"
    - cni == "calico"
    - Offline != "yes"

# 离线
# load镜像和
- name: down load cni images (1/2)
  get_url:
    url: "{{images_url.stdout}}images/cni/{{cni}}/{{cni}}.tar"
    dest: "/tmp/{{cni}}.tar"
    timeout: 120
  when:
    - Offline == "yes"

- name: down load cni images (2/2)
  shell:
    "docker load -i /tmp/{{cni}}.tar"
  when:
    - Offline == "yes"


- name: k8s install cni(1/2)
  shell: 
    "kubectl apply -f {{images_url.stdout}}images/cni/{{cni}}/yaml/{{cni}}.yaml"
  when:
    - ssl_host == "yes"
    - Offline == "yes"
